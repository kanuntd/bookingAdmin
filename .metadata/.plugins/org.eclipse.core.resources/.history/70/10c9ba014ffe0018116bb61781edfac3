import java.sql.Date;
import java.text.DateFormat;
import java.util.ArrayList;

import org.bson.Document;

public class RoomService {
	public static ArrayList<Room> arr;
	public static ArrayList<Room> data;

	public RoomService() {
//	   arr = new ArrayList<>();
//	   data = new ArrayList<>();
//	   Room r = new Room("50","Nov 14, 2018","08:00","09:00","R01","empty");
//	   Room r1 = new Room("50","Nov 14, 2018","09:00","10:00","R01","busy");
//	   Room r2 = new Room("50","Nov 14, 2018","10:00","11:00","R01","empty");
//	   Room r3 = new Room("50","Nov 14, 2018","11:00","12:00","R01","empty");
//	   Room r4 = new Room("50","Nov 14, 2018","12:00","13:00","R01","empty");
//	   Room r5 = new Room("50","Nov 14, 2018","13:00","14:00","R01","empty");
//	   Room r6 = new Room("50","Nov 14, 2018","14:00","15:00","R01","empty");
//	   Room r7 = new Room("50","Nov 14, 2018","16:00","17:00","R01","busy");
//	   Room r8 = new Room("50","Nov 14, 2018","18:00","19:00","R01","empty");
//	   Room r9 = new Room("50","Nov 14, 2018","19:00","20:00","R01","busy");
//	   data.add(r);
//	   data.add(r1);
//	   data.add(r2);
//	   data.add(r3);
//	   data.add(r4);
//	   data.add(r5);
//	   data.add(r6);
//	   data.add(r7);
//	   data.add(r8);
//	   data.add(r9);
//	   

	}


	public static void insertBooking() {

	}
	

	public static ArrayList<Booking> getBooking(Room room, String date, String timestart, String timeEnd) {
		RoomDao dao = new RoomDao();
		ArrayList<Booking> history = new ArrayList<>();
		for (Booking read : dao.getBooking()) {
			if (read.status.equals("false")) {///////////////////////// ****
				if (room.room.equals("") || room.room.equals(read.room.room)) {
					if (room.size.equals("") || room.size.equals(read.room.size)) {
						if (date.equals(read.date)|| date.equals("")) {
							int start = 0;
							int end = 0;
							int dbstart = Integer.parseInt(read.timeStart.substring(0, 2));
							int dbend = Integer.parseInt(read.timeEnd.substring(0, 2));
							if (timestart.equals("") && timeEnd.equals("")) {
								history.add(new Booking(read.date, read.timeStart, read.timeEnd, read.status, read.room, read.user));
							} else if (timestart.equals("")) {
								end = Integer.parseInt(timeEnd.substring(0, 2));
								if (end>=dbend) {
									history.add(new Booking(read.date, read.timeStart, read.timeEnd, read.status, read.room, read.user));
								}
							} else if (timeEnd.equals("")) {
								start = Integer.parseInt(timestart.substring(0, 2));
								if (start<=dbstart) {
									history.add(new Booking(read.date, read.timeStart, read.timeEnd, read.status, read.room, read.user));
								}
							} else {
								start = Integer.parseInt(timestart.substring(0, 2));
								end = Integer.parseInt(timeEnd.substring(0, 2));
								if (start<=dbstart&&end>=dbend) {
									history.add(new Booking(read.date, read.timeStart, read.timeEnd, read.status, read.room, read.user));
								}
							}
						}
					}
				}
			}
		}
		for(Booking g : history) {
			System.out.println(g.user.username);
		}
		return history;
	}
	public static ArrayList<Booking> getRoomAll(Room room, String date, String timestart, String timeEnd){
	    RoomDao roomDao = new RoomDao();
	    ArrayList<Booking> getRoom = new ArrayList<>();
	    for (Booking read : roomDao.getBooking()) {
					if (room.size.equals("") || room.size.equals(read.room.size)) {
						if (date.equals(read.date)|| date.equals("")) {
							int start = 0;
							int end = 0;
							int dbstart = Integer.parseInt(read.timeStart.substring(0, 2));
							int dbend = Integer.parseInt(read.timeEnd.substring(0, 2));
							if (timestart.equals("") && timeEnd.equals("")) {
								getRoom.add(new Booking(read.date, read.timeStart, read.timeEnd, read.status, read.room, read.user));
							} else if (timestart.equals("")) {
								end = Integer.parseInt(timeEnd.substring(0, 2));
								if (end>=dbend) {
									getRoom.add(new Booking(read.date, read.timeStart, read.timeEnd, read.status, read.room, read.user));
								}
							} else if (timeEnd.equals("")) {
								start = Integer.parseInt(timestart.substring(0, 2));
								if (start<=dbstart) {
									getRoom.add(new Booking(read.date, read.timeStart, read.timeEnd, read.status, read.room, read.user));
								}
							} else {
								start = Integer.parseInt(timestart.substring(0, 2));
								end = Integer.parseInt(timeEnd.substring(0, 2));
								if (start<=dbstart&&end>=dbend) {
									getRoom.add(new Booking(read.date, read.timeStart, read.timeEnd, read.status, read.room, read.user));
								}
							}
						}
					}
				}
		
		

	return getRoom;
}
	boolean updateBooking(ArrayList<Booking> arr) {
		RoomDao a = new RoomDao();
		boolean x = a.updateBooking(arr);
		return x;
		
		
	}
	void insertRequest(Booking booking,String newDate,String newTimeStart,String newTimeEnd){
		RoomDao dao = new RoomDao();
		//dao.insertRequest();
	}


}
