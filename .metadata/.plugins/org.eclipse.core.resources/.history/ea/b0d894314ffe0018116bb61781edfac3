import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;

import org.bson.Document;

import com.mongodb.BasicDBObject;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;

public class RoomDao {
	ConnectMongoDB connect;
	MongoDatabase database;
	Document doc;
	MongoCursor<Document> cursor;

	RoomDao() {
		connect = new ConnectMongoDB();
		database = connect.getMongoDatabase();
	}
///////////////////////////////////////////////////////////////Story 1/////////////////////////////////////////////////////////////////////////////
	ArrayList<Booking> getRoomAll() {
		MongoCollection<Document> collection = database.getCollection("Booking");
		MongoCursor<Document> cursor = collection.find().iterator();
		ArrayList<Booking> getRoom = new ArrayList<Booking>();
		try {
			while (cursor.hasNext()) {
				Document obj = cursor.next();
				String room = null;
				String size = null;
				String username = null;
				String date = (String) obj.get("date");
				String timeStart = (String) obj.get("timeStart");
				String timeEnd = (String) obj.get("timeEnd");
				String status = (String) obj.get("status");
				ArrayList<Document> Room = (ArrayList<Document>) obj.get("Room");
				for (Document result : Room) {
					room = (String) result.get("room");
					size = (String) result.get("size");
				}
				ArrayList<Document> User = (ArrayList<Document>) obj.get("User");
				for (Document result : User) {
					username = (String) result.get("username");

				}
				Room rooms = new Room(room, size);
				User users = new User(username);
				Booking booking = new Booking(date, timeStart, timeEnd, status, rooms, users);
				getRoom.add(booking);
			}

		} finally {
			cursor.close();
		}
		return getRoom;

	}

	//////////////////////////////////////////////////////////////////////////// story
	//////////////////////////////////////////////////////////////////////////// 6////////////////////////////////////////////
	ArrayList<Booking> getBooking() {
		MongoCollection<Document> collection = database.getCollection("Booking");
		MongoCursor<Document> cursor = collection.find().iterator();
		ArrayList<Booking> history = new ArrayList<Booking>();
		try {
			while (cursor.hasNext()) {
				Document obj = cursor.next();
				String room = null;
				String size = null;
				String username = null;
				String date = (String) obj.get("date");
				String timeStart = (String) obj.get("timeStart");
				String timeEnd = (String) obj.get("timeEnd");
				String status = (String) obj.get("status");
				ArrayList<Document> Room = (ArrayList<Document>) obj.get("Room");
				for (Document result : Room) {
					room = (String) result.get("room");
					size = (String) result.get("size");
				}
				ArrayList<Document> User = (ArrayList<Document>) obj.get("User");
				for (Document result : User) {
					username = (String) result.get("username");

				}
				Room rooms = new Room(room, size);
				User users = new User(username);
				Booking booking = new Booking(date, timeStart, timeEnd, status, rooms, users);
				history.add(booking);
			}

		} finally {
			cursor.close();
		}
		return history;
	}

	public void updateData() {
		MongoCollection<Document> collection = database.getCollection("Booking");
	
		doc = new Document();
		doc.append("timeStart", "09:31");

		Document doc1 = new Document();
		doc1.append("User", Arrays.asList(new Document("username","lllllllll")));
		
		Document update = new Document();	   
		update.append("$set",doc1);
		
	     collection.updateOne(doc, update);
	}
	
	boolean updateBooking(ArrayList<Booking> arr){
		MongoCollection<Document> collection = database.getCollection("Booking");
		System.out.println(arr.get(0).user.username + " " +arr.get(0).timeStart + " "+arr.get(0).timeEnd );
		
		doc = new Document();
		doc.append("timeStart", arr.get(0).timeStart);	
		Document doc1 = new Document();
		doc1.append("User", Arrays.asList(new Document("username",arr.get(0).user.username))).append("status", "false");
		
	
		Document update = new Document();	   
		update.append("$set",doc1);
		
	     collection.updateOne(doc, update); 
	    return true;
		
		
	}
	boolean checkUserName(String username){
		int i = 0;
		MongoCollection<Document> collection = database.getCollection("User");
		Document doc = new Document().append("username", username);
		MongoCursor<Document> cursor = collection.find(doc).iterator();
		while(cursor.hasNext()) {
			i++;
			cursor.next();
		}
		if(i>0) {
			return false;
		}
		return true;
	}
boolean insert(ArrayList<User> arr) {
		
		MongoCollection<Document> collection = database.getCollection("User");
		Document doc = new Document().append("Username",arr.get(0).username).append("Password", arr.get(0).password)
				.append("status", arr.get(0).status);
		
		collection.insertOne(doc);
		return true;
				
	}
void insertRequest(Booking booking,String newDate,String newTimeStart,String newTimeEnd) {
	String date ="";
	MongoCollection<Document> collection = database.getCollection("Request");
	
	String json = "{\"Booking\": [\n" + 
			"        {\n" + 
			"            \"date\": \""+booking.date+"\",\n" + 
			"            \"timeStart\": \""+booking.timeStart+"\",\n" + 
			"            \"timeEnd\": \""+booking.timeEnd+"\",\n" + 
			"            \"status\": \""+booking.status+"\",\n" + 
			"            \"Room\": [\n" + 
			"                {\n" + 
			"                    \"room\": \""+booking.room.room+"\",\n" + 
			"                    \"size\": \""+booking.room.size+"\"\n" + 
			"                }\n" + 
			"            ],\n" + 
			"            \"User\": [\n" + 
			"                {\n" + 
			"                    \"username\": \""+booking.user.username+"\"\n" + 
			"                }\n" + 
			"            ]\n" + 
			"        }\n" + 
			"    ],\n" + 
			"    \"newDate\": \""+newDate+"\",\n" + 
			"    \"newTimeStart\": \""+newTimeStart+"\",\n" + 
			"    \"newTimeEnd\": \""+newTimeEnd+"\"}";
System.out.println(json);
			Document dbObject = Document.parse(json);
			
			collection.insertOne(dbObject);
			System.out.println("inserttttt");
}


}
/*
 * "date": "Nov 14, 2018", "timeStart": "13:00", "timeEnd": "18:00", "status":
 * "true", "Room": [ { "room": "R01", "size": "50" } ],
 */
